{"version":3,"sources":["tortilla"],"names":[],"mappings":";;AACA,IAAM,UAAU,QAAQ,WAAR,CAAhB;AACA,IAAM,OAAO,QAAQ,iBAAR,CAAb;AACA,IAAM,aAAa,QAAQ,mBAAR,CAAnB;AACA,IAAM,eAAe,QAAQ,sBAAR,CAArB;;AAEA;;;;AAIA,QACG,OADH,CACW,KAAK,OADhB,EAEG,WAFH,CAEe,KAAK,WAFpB;;AAIA,QACG,OADH,CACW,eADX,EAEG,WAFH,CAEe,uDAFf,EAGG,MAHH,CAGU,qBAHV,EAGiC,8CAHjC,EAIG,MAJH,CAIU,yBAJV,EAIqC,kDAJrC,EAKG,MALH,CAKU,YALV,EAKwB,8CALxB,EAMG,MANH,CAMU,UAAC,IAAD,EAAO,OAAP,EAAmB;AACzB,aAAW,MAAX,CAAkB,IAAlB,EAAwB,OAAxB;AACD,CARH;;AAUA,QACG,OADH,CACW,aADX,EAEG,WAFH,CAEe,yDAFf,EAGG,MAHH,CAGU,UAAC,GAAD,EAAS;AACf,MAAM,eAAe,MAAM,aAAa,MAAb,CAAoB,GAApB,CAAN,GAAiC,YAAtD;AACA,eAAa,cAAb;AACA,aAAW,MAAX,CAAkB,GAAlB;AACD,CAPH;;AASA,QACG,OADH,CACW,qBADX,EACkC,qBADlC,EAEG,OAFH,CAEW,mBAFX,EAEgC,6BAFhC,EAGG,OAHH,CAGW,qBAHX,EAGkC,oBAHlC,EAIG,OAJH,CAIW,sBAJX,EAImC,0BAJnC;;AAMA,QAAQ,KAAR,CAAc,QAAQ,IAAtB","file":"tortilla-compiled","sourcesContent":["\nconst Program = require('commander');\nconst Pack = require('../package.json');\nconst Essentials = require('../src/essentials');\nconst LocalStorage = require('../src/local-storage');\n\n/**\n  CLI entry point.\n */\n\nProgram\n  .version(Pack.version)\n  .description(Pack.description);\n\nProgram\n  .command('create [name]')\n  .description('Creates a new Tortilla project with the provided name')\n  .option('-o, --output [path]', 'The output path of the newly created project')\n  .option('-m, --message [message]', 'The created project\\'s initial commit\\'s message')\n  .option('--override', 'Override project directory if already exists')\n  .action((name, options) => {\n    Essentials.create(name, options);\n  });\n\nProgram\n  .command('init [name]')\n  .description('Initializes Tortilla essentials in the provided project')\n  .action((dir) => {\n    const localStorage = dir ? LocalStorage.create(dir) : LocalStorage;\n    localStorage.assertTortilla();\n    Essentials.ensure(dir);\n  });\n\nProgram\n  .command('manual <command...>', 'Manage manual files')\n  .command('step <command...>', 'Manage step commits history')\n  .command('strict <command...>', 'Manage strict mode')\n  .command('release <command...>', 'Manage tutorial releases');\n\nProgram.parse(process.argv);\n"]}